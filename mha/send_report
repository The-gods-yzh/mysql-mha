#!/usr/bin/perl
#邮件报警
  use strict;
  use warnings FATAL => 'all';
  use Mail::Sender;
  use Getopt::Long;

  #new_master_host and new_slave_hosts are set only when recovering master succeeded
  my ( $dead_master_host, $new_master_host, $new_slave_hosts, $subject, $body );
  my $smtp='smtp.qq.com';                       #使用的邮箱
  my $mail_from='xxx@qq.com';	   #发送的邮箱地址
  my $mail_user='xxx@qq.com';   	   #发送的用户（邮箱地址）
  my $mail_pass='xxx';	                   #邮箱的秘钥
  my $mail_to=['xxx@qq.com']; 	   #要发送的的邮箱地址
  
  GetOptions(
    'orig_master_host=s' => \$dead_master_host,
    'new_master_host=s'  => \$new_master_host,
    'new_slave_hosts=s'  => \$new_slave_hosts,
    'subject=s'          => \$subject,
    'body=s'             => \$body,
  );

  mailToContacts($smtp,$mail_from,$mail_user,$mail_pass,$mail_to,$subject,$body);
  
  sub mailToContacts {
    my ( $smtp, $mail_from, $user, $passwd, $mail_to, $subject, $msg ) = @_;
    open my $DEBUG, "> /tmp/monitormail.log"
    or die "Can't open the debug      file:$!\n";
    my $sender = new Mail::Sender {
      ctype       => 'text/plain; charset=utf-8',
      encoding    => 'utf-8',
      smtp        => $smtp,
      from        => $mail_from,
      auth        => 'LOGIN',
      TLS_allowed => '0',
      authid      => $user,
      authpwd     => $passwd,
      to          => $mail_to,
      subject     => $subject,
      debug       => $DEBUG
    };
  
    $sender->MailMsg(
      {   
      msg   => $msg,
      debug => $DEBUG
      }
    ) 
    or print $Mail::Sender::Error;
    return 1;
  }

  # Do whatever you want here
  exit 0;

